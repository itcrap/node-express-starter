{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Develop\\\\node-express-starter\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Develop\\\\node-express-starter\",\"filename\":\"C:\\\\Develop\\\\node-express-starter\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Develop\\\\node-express-starter\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Develop\\node-express-starter\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Develop\\node-express-starter",
      "filename": "C:\\Develop\\node-express-starter\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Develop\\node-express-starter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Develop\\node-express-starter\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Develop\\node-express-starter\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Develop\\node-express-starter\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv\").config();\n\nvar express = require(\"express\");\n\nvar _require = require(\"../winston.logger.js\"),\n    log = _require.log,\n    expressLogger = _require.expressLogger,\n    expressErrorLogger = _require.expressErrorLogger;\n\nvar config = process.env;\nlog.info(\"Test info message from index.js\");\nvar app = express();\napp.set(\"port\", config.API_PORT);\napp.set(\"host\", config.API_HOST);\napp.use(expressLogger); // app.use(router)\n\napp.use(expressErrorLogger);\napp.get(\"/\", function (req, res) {\n  return res.send(\"Hello World\");\n});\napp.listen(app.get(\"port\"), app.get(\"host\"), function () {\n  return log.info(\"Example app listening on port \".concat(config.API_PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJleHByZXNzIiwibG9nIiwiZXhwcmVzc0xvZ2dlciIsImV4cHJlc3NFcnJvckxvZ2dlciIsInByb2Nlc3MiLCJlbnYiLCJpbmZvIiwiYXBwIiwic2V0IiwiQVBJX1BPUlQiLCJBUElfSE9TVCIsInVzZSIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLElBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBS0lBLE9BQU8sQ0FBQyxzQkFBRCxDO0lBSFRHLEcsWUFBQUEsRztJQUNBQyxhLFlBQUFBLGE7SUFDQUMsa0IsWUFBQUEsa0I7O0FBR0YsSUFBTUosTUFBTSxHQUFHSyxPQUFPLENBQUNDLEdBQXZCO0FBRUFKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLGlDQUFUO0FBRUEsSUFBTUMsR0FBRyxHQUFHUCxPQUFPLEVBQW5CO0FBQ0FPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE1BQVIsRUFBZ0JULE1BQU0sQ0FBQ1UsUUFBdkI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQlQsTUFBTSxDQUFDVyxRQUF2QjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUVQsYUFBUixFLENBQ0E7O0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRUixrQkFBUjtBQUVBSSxHQUFHLENBQUNLLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDQyxJQUFKLENBQVMsYUFBVCxDQUFkO0FBQUEsQ0FBYjtBQUVBUixHQUFHLENBQUNTLE1BQUosQ0FBV1QsR0FBRyxDQUFDSyxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCTCxHQUFHLENBQUNLLEdBQUosQ0FBUSxNQUFSLENBQTVCLEVBQTZDO0FBQUEsU0FDM0NYLEdBQUcsQ0FBQ0ssSUFBSix5Q0FBMENQLE1BQU0sQ0FBQ1UsUUFBakQsRUFEMkM7QUFBQSxDQUE3QyIsInNvdXJjZVJvb3QiOiJDOlxcRGV2ZWxvcFxcbm9kZS1leHByZXNzLXN0YXJ0ZXJcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHtcbiAgbG9nLFxuICBleHByZXNzTG9nZ2VyLFxuICBleHByZXNzRXJyb3JMb2dnZXIsXG59ID0gcmVxdWlyZShcIi4uL3dpbnN0b24ubG9nZ2VyLmpzXCIpO1xuXG5jb25zdCBjb25maWcgPSBwcm9jZXNzLmVudjtcblxubG9nLmluZm8oXCJUZXN0IGluZm8gbWVzc2FnZSBmcm9tIGluZGV4LmpzXCIpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5hcHAuc2V0KFwicG9ydFwiLCBjb25maWcuQVBJX1BPUlQpO1xuYXBwLnNldChcImhvc3RcIiwgY29uZmlnLkFQSV9IT1NUKTtcblxuYXBwLnVzZShleHByZXNzTG9nZ2VyKTtcbi8vIGFwcC51c2Uocm91dGVyKVxuYXBwLnVzZShleHByZXNzRXJyb3JMb2dnZXIpO1xuXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKFwiSGVsbG8gV29ybGRcIikpO1xuXG5hcHAubGlzdGVuKGFwcC5nZXQoXCJwb3J0XCIpLCBhcHAuZ2V0KFwiaG9zdFwiKSwgKCkgPT5cbiAgbG9nLmluZm8oYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7Y29uZmlnLkFQSV9QT1JUfWApXG4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "log",
        "expressLogger",
        "expressErrorLogger",
        "process",
        "env",
        "info",
        "app",
        "set",
        "API_PORT",
        "API_HOST",
        "use",
        "get",
        "req",
        "res",
        "send",
        "listen"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;eAKIA,OAAO,CAAC,sBAAD,C;IAHTG,G,YAAAA,G;IACAC,a,YAAAA,a;IACAC,kB,YAAAA,kB;;AAGF,IAAMJ,MAAM,GAAGK,OAAO,CAACC,GAAvB;AAEAJ,GAAG,CAACK,IAAJ,CAAS,iCAAT;AAEA,IAAMC,GAAG,GAAGP,OAAO,EAAnB;AACAO,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBT,MAAM,CAACU,QAAvB;AACAF,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBT,MAAM,CAACW,QAAvB;AAEAH,GAAG,CAACI,GAAJ,CAAQT,aAAR,E,CACA;;AACAK,GAAG,CAACI,GAAJ,CAAQR,kBAAR;AAEAI,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,aAAT,CAAd;AAAA,CAAb;AAEAR,GAAG,CAACS,MAAJ,CAAWT,GAAG,CAACK,GAAJ,CAAQ,MAAR,CAAX,EAA4BL,GAAG,CAACK,GAAJ,CAAQ,MAAR,CAA5B,EAA6C;AAAA,SAC3CX,GAAG,CAACK,IAAJ,yCAA0CP,MAAM,CAACU,QAAjD,EAD2C;AAAA,CAA7C",
      "sourceRoot": "C:\\Develop\\node-express-starter\\src\\",
      "sourcesContent": [
        "require(\"dotenv\").config();\nconst express = require(\"express\");\nconst {\n  log,\n  expressLogger,\n  expressErrorLogger,\n} = require(\"../winston.logger.js\");\n\nconst config = process.env;\n\nlog.info(\"Test info message from index.js\");\n\nconst app = express();\napp.set(\"port\", config.API_PORT);\napp.set(\"host\", config.API_HOST);\n\napp.use(expressLogger);\n// app.use(router)\napp.use(expressErrorLogger);\n\napp.get(\"/\", (req, res) => res.send(\"Hello World\"));\n\napp.listen(app.get(\"port\"), app.get(\"host\"), () =>\n  log.info(`Example app listening on port ${config.API_PORT}`)\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616326644870
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Develop\\\\node-express-starter\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Develop\\\\node-express-starter\",\"filename\":\"C:\\\\Develop\\\\node-express-starter\\\\winston.logger.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Develop\\\\node-express-starter\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Develop\\node-express-starter\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Develop\\node-express-starter",
      "filename": "C:\\Develop\\node-express-starter\\winston.logger.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Develop\\node-express-starter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Develop\\node-express-starter\\winston.logger.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Develop\\node-express-starter\\winston.logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Develop\\node-express-starter\\",
        "sourceFileName": "winston.logger.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nrequire(\"dotenv\").config();\n\nvar config = process.env;\n\nvar winston = require(\"winston\");\n\nvar format = winston.format,\n    transports = winston.transports;\n\nvar expressWinston = require(\"express-winston\");\n\nconsole.log(\"Initializing logging in \".concat(config.LOG_FORMAT, \" mode\"));\n\nvar inlineType = function inlineType(type) {\n  switch (type) {\n    case \"default\":\n      return format.printf(function (_ref) {\n        var level = _ref.level,\n            message = _ref.message,\n            timestamp = _ref.timestamp;\n        return \"[\".concat(timestamp, \"][\").concat(level, \"] \").concat(message);\n      });\n\n    case \"express\":\n      return format.printf(function (_ref2) {\n        var level = _ref2.level,\n            message = _ref2.message,\n            timestamp = _ref2.timestamp,\n            meta = _ref2.meta;\n        var msg = [];\n        msg.push(\"[\".concat(timestamp, \"]\"));\n        msg.push(\"[\".concat(level, \"]\"));\n        msg.push(\" \".concat(message));\n        msg.push(\" from \".concat(meta ? meta.req.headers.host : \"\"));\n        msg.push(\" at \".concat(meta ? meta.req.headers[\"user-agent\"] : \"\"));\n        msg.push(\" with status code \".concat(meta ? meta.res.statusCode : \"\"));\n        return msg.join(\"\");\n      });\n\n    default:\n      throw new Error(\"Format type \".concat(type, \" is not supported\"));\n  }\n};\n\nvar csvType = function csvType(type) {\n  switch (type) {\n    case \"default\":\n      return format.printf(function (_ref3) {\n        var level = _ref3.level,\n            message = _ref3.message,\n            timestamp = _ref3.timestamp;\n        var msg = [];\n        msg.push(timestamp);\n        msg.push(level);\n        msg.push(message);\n        return msg.join(config.LOG_SEPARATOR);\n      });\n\n    case \"express\":\n      return format.printf(function (_ref4) {\n        var level = _ref4.level,\n            message = _ref4.message,\n            timestamp = _ref4.timestamp,\n            meta = _ref4.meta;\n        var msg = [];\n        msg.push(timestamp);\n        msg.push(level);\n        msg.push(message);\n        msg.push(meta ? meta.req.url : \"\");\n        msg.push(meta ? meta.req.method : \"\");\n        msg.push(meta ? meta.req.httpVersion : \"\");\n        msg.push(meta ? meta.req.originalUrl : \"\");\n        msg.push(meta ? JSON.stringify(meta.req.query) : \"\");\n        msg.push(meta ? meta.res.statusCode : \"\");\n        msg.push(meta ? meta.req.headers.host : \"\");\n        msg.push(meta ? meta.req.headers.accept : \"\");\n        msg.push(meta ? meta.req.headers.connection : \"\");\n        return msg.join(config.LOG_SEPARATOR);\n      });\n\n    default:\n      throw new Error(\"Format type \".concat(type, \" is not supported\"));\n  }\n};\n\nvar combineFormats = function combineFormats(formatType, isConsole) {\n  var fmts = [];\n  fmts.push(format.timestamp({\n    format: config.LOG_TSFORMAT\n  }));\n\n  if (isConsole) {\n    fmts.push(format.colorize({\n      all: true\n    }));\n  }\n\n  fmts.push(formatType);\n  return format.combine.apply(format, fmts);\n};\n\nvar getLogFormat = function getLogFormat(formatType, isConsole) {\n  switch (config.LOG_FORMAT) {\n    case \"csv\":\n      return combineFormats(csvType(formatType), isConsole);\n\n    case \"inline\":\n      return combineFormats(inlineType(formatType), isConsole);\n\n    case \"json\":\n      return combineFormats(format.json(), false);\n\n    case \"logstash\":\n      return combineFormats(format.logstash(), false);\n\n    case \"pretty\":\n      return combineFormats(format.prettyPrint(), false);\n\n    case \"simple\":\n      return combineFormats(format.simple(), isConsole);\n\n    default:\n      throw new Error(\"LOG_FORMAT is not configured correctly in .env file\");\n  }\n}; // Configuration for expressWinston.logger()\n// https://github.com/bithavoc/express-winston\n\n\nvar options = {\n  defaults: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: format.json()\n  },\n  defaultLogging: {\n    level: \"info\",\n    filename: \"logs/default.log\",\n    maxsize: 5242880,\n    // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"default\", false)\n  },\n  expressRequests: {\n    level: \"info\",\n    filename: \"logs/default.log\",\n    maxsize: 5242880,\n    // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", false)\n  },\n  expressErrors: {\n    level: \"error\",\n    filename: \"logs/error.log\",\n    maxsize: 5242880,\n    // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", false)\n  },\n  defaultConsole: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"default\", true)\n  },\n  expressConsole: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", true)\n  }\n};\n/* Default logger */\n\nvar log = winston.createLogger(_objectSpread(_objectSpread({}, options.defaults), {}, {\n  transports: [new transports.Console(options.defaultConsole), new transports.File(options.defaultLogging), new transports.File(options.defaultLogging)]\n}));\n/* Express request handler */\n\nvar expressLogger = expressWinston.logger(_objectSpread(_objectSpread({}, options.defaults), {}, {\n  transports: [new transports.Console(options.expressConsole), new transports.File(options.expressRequests), new transports.File(options.expressErrors)]\n}));\n/* Express error handler */\n\nvar expressErrorLogger = expressWinston.errorLogger(_objectSpread(_objectSpread({}, options.defaults), {}, {\n  transports: [new transports.Console(options.expressConsole), new transports.File(options.expressRequests), new transports.File(options.expressErrors)]\n}));\nmodule.exports = {\n  log: log,\n  expressLogger: expressLogger,\n  expressErrorLogger: expressErrorLogger\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "winston.logger.js"
      ],
      "names": [
        "require",
        "config",
        "process",
        "env",
        "winston",
        "format",
        "transports",
        "expressWinston",
        "console",
        "log",
        "LOG_FORMAT",
        "inlineType",
        "type",
        "printf",
        "level",
        "message",
        "timestamp",
        "meta",
        "msg",
        "push",
        "req",
        "headers",
        "host",
        "res",
        "statusCode",
        "join",
        "Error",
        "csvType",
        "LOG_SEPARATOR",
        "url",
        "method",
        "httpVersion",
        "originalUrl",
        "JSON",
        "stringify",
        "query",
        "accept",
        "connection",
        "combineFormats",
        "formatType",
        "isConsole",
        "fmts",
        "LOG_TSFORMAT",
        "colorize",
        "all",
        "combine",
        "getLogFormat",
        "json",
        "logstash",
        "prettyPrint",
        "simple",
        "options",
        "defaults",
        "handleExceptions",
        "exitOnError",
        "defaultLogging",
        "filename",
        "maxsize",
        "maxFiles",
        "expressRequests",
        "expressErrors",
        "defaultConsole",
        "expressConsole",
        "createLogger",
        "Console",
        "File",
        "expressLogger",
        "logger",
        "expressErrorLogger",
        "errorLogger",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Develop\\node-express-starter\\",
      "sourcesContent": [
        "require(\"dotenv\").config();\n\nconst config = process.env;\nconst winston = require(\"winston\");\n\nconst { format, transports } = winston;\nconst expressWinston = require(\"express-winston\");\n\nconsole.log(`Initializing logging in ${config.LOG_FORMAT} mode`);\n\nconst inlineType = (type) => {\n  switch (type) {\n    case \"default\":\n      return format.printf(\n        ({ level, message, timestamp }) => `[${timestamp}][${level}] ${message}`\n      );\n    case \"express\":\n      return format.printf(({ level, message, timestamp, meta }) => {\n        const msg = [];\n        msg.push(`[${timestamp}]`);\n        msg.push(`[${level}]`);\n        msg.push(` ${message}`);\n        msg.push(` from ${meta ? meta.req.headers.host : \"\"}`);\n        msg.push(` at ${meta ? meta.req.headers[\"user-agent\"] : \"\"}`);\n        msg.push(` with status code ${meta ? meta.res.statusCode : \"\"}`);\n        return msg.join(\"\");\n      });\n    default:\n      throw new Error(`Format type ${type} is not supported`);\n  }\n};\n\nconst csvType = (type) => {\n  switch (type) {\n    case \"default\":\n      return format.printf(({ level, message, timestamp }) => {\n        const msg = [];\n        msg.push(timestamp);\n        msg.push(level);\n        msg.push(message);\n        return msg.join(config.LOG_SEPARATOR);\n      });\n    case \"express\":\n      return format.printf(({ level, message, timestamp, meta }) => {\n        const msg = [];\n        msg.push(timestamp);\n        msg.push(level);\n        msg.push(message);\n        msg.push(meta ? meta.req.url : \"\");\n        msg.push(meta ? meta.req.method : \"\");\n        msg.push(meta ? meta.req.httpVersion : \"\");\n        msg.push(meta ? meta.req.originalUrl : \"\");\n        msg.push(meta ? JSON.stringify(meta.req.query) : \"\");\n        msg.push(meta ? meta.res.statusCode : \"\");\n        msg.push(meta ? meta.req.headers.host : \"\");\n        msg.push(meta ? meta.req.headers.accept : \"\");\n        msg.push(meta ? meta.req.headers.connection : \"\");\n        return msg.join(config.LOG_SEPARATOR);\n      });\n    default:\n      throw new Error(`Format type ${type} is not supported`);\n  }\n};\n\nconst combineFormats = (formatType, isConsole) => {\n  const fmts = [];\n  fmts.push(format.timestamp({ format: config.LOG_TSFORMAT }));\n  if (isConsole) {\n    fmts.push(format.colorize({ all: true }));\n  }\n  fmts.push(formatType);\n  return format.combine(...fmts);\n};\n\nconst getLogFormat = (formatType, isConsole) => {\n  switch (config.LOG_FORMAT) {\n    case \"csv\":\n      return combineFormats(csvType(formatType), isConsole);\n    case \"inline\":\n      return combineFormats(inlineType(formatType), isConsole);\n    case \"json\":\n      return combineFormats(format.json(), false);\n    case \"logstash\":\n      return combineFormats(format.logstash(), false);\n    case \"pretty\":\n      return combineFormats(format.prettyPrint(), false);\n    case \"simple\":\n      return combineFormats(format.simple(), isConsole);\n    default:\n      throw new Error(\"LOG_FORMAT is not configured correctly in .env file\");\n  }\n};\n\n// Configuration for expressWinston.logger()\n// https://github.com/bithavoc/express-winston\nconst options = {\n  defaults: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: format.json(),\n  },\n  defaultLogging: {\n    level: \"info\",\n    filename: \"logs/default.log\",\n    maxsize: 5242880, // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"default\", false),\n  },\n  expressRequests: {\n    level: \"info\",\n    filename: \"logs/default.log\",\n    maxsize: 5242880, // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", false),\n  },\n  expressErrors: {\n    level: \"error\",\n    filename: \"logs/error.log\",\n    maxsize: 5242880, // 5MB\n    maxFiles: 5,\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", false),\n  },\n  defaultConsole: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"default\", true),\n  },\n  expressConsole: {\n    level: \"info\",\n    handleExceptions: true,\n    exitOnError: false,\n    format: getLogFormat(\"express\", true),\n  },\n};\n\n/* Default logger */\nconst log = winston.createLogger({\n  ...options.defaults,\n  transports: [\n    new transports.Console(options.defaultConsole),\n    new transports.File(options.defaultLogging),\n    new transports.File(options.defaultLogging),\n  ],\n});\n\n/* Express request handler */\nconst expressLogger = expressWinston.logger({\n  ...options.defaults,\n  transports: [\n    new transports.Console(options.expressConsole),\n    new transports.File(options.expressRequests),\n    new transports.File(options.expressErrors),\n  ],\n});\n\n/* Express error handler */\nconst expressErrorLogger = expressWinston.errorLogger({\n  ...options.defaults,\n  transports: [\n    new transports.Console(options.expressConsole),\n    new transports.File(options.expressRequests),\n    new transports.File(options.expressErrors),\n  ],\n});\n\nmodule.exports = {\n  log,\n  expressLogger,\n  expressErrorLogger,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616191065160
  }
}